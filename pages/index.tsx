import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { ConvexProvider, ConvexReactClient } from "convex-dev/react";
import convexConfig from "../convex.json";
import { useQuery, useMutation, useConvex } from "../convex/_generated";
import { useState, useEffect } from 'react';
import chess from "chess";



const convex = new ConvexReactClient(convexConfig.origin);


const ChessSquare = ({piece, index}: {piece: chess.Piece, index: number}) => {
  const pieceStr = piece ? (piece.type === "pawn" ? "P" : piece.notation) : "";
  const colorClass = piece ? (piece.side.name === "white" ? styles.whitepiece : styles.blackpiece) : undefined;
  const row = Math.floor(index / 8);
  const col = index % 8;
  const squareColorClass = ((row + col) % 2 === 0) ? styles.blacksquare : styles.whitesquare;
  return <div className={styles.griditem + " " + squareColorClass}>
    <span className={colorClass}>{pieceStr}</span>
  </div>;
}

const ChessBoard = () => {
  const game = useQuery("getGame");
  const createGame = useMutation("createGame");
  useEffect(() => {
    if (game === null) {
      createGame();
    }
  })
  if (!game) {
    return null;
  }
  const [moves, gameState] = game;
  const gameClient = chess.create();
  for (let move of moves) {
    gameClient.move(move.move);
  }
  // TODO: display move history?
  const board = gameClient.game.board;
  const squares = board.squares;

  return (<div className={styles.gridcontainer}>
    {squares.map((square, i) => <ChessSquare key={i} piece={square.piece} index={i} />)}
  </div>);
};

const EntryForm = () => {
  const options = useQuery("getOptions") ?? [];
  const voteForOption = useMutation("voteForOption");
  const [moveInput, setMoveInput] = useState("");
  const playMove = useMutation("playMove");
  const handleInputChange = (event: any) => {
    setMoveInput(event.target.value);
  };
  const submit = () => {
    voteForOption(moveInput);
  };
  const play = () => {
    playMove();
  }
  return (<div>
    <ul>
      {options.map(option => <li key={option.move}>{option.move}: {option.votes} votes</li>)}
    </ul>
    <input type="text" onChange={handleInputChange} value={moveInput} />
    <button onClick={submit}>Vote</button>
    <div><button onClick={play}>Play Top Move</button></div>
  </div>);
};

const PlayChess = () => {
  return (
    <div>
      <ChessBoard />
      <EntryForm />
    </div>
  );
};


const Home: NextPage = () => {
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Convex Plays Chess
        </h1>

        <ConvexProvider client={convex}>
          <PlayChess />
        </ConvexProvider>

      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

export default Home
